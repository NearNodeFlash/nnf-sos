/*
 * Swordfish API
 *
 * This contains the definition of the Swordfish extensions to a Redfish service.
 *
 * API version: v1.2.c
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PowerV161Voltage struct {

	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`

	Actions PowerV161VoltageActions `json:"Actions,omitempty"`

	// The value at which the reading is below normal range but not yet fatal.
	LowerThresholdCritical *float32 `json:"LowerThresholdCritical,omitempty"`

	// The value at which the reading is below normal range and fatal.
	LowerThresholdFatal *float32 `json:"LowerThresholdFatal,omitempty"`

	// The value at which the reading is below normal range.
	LowerThresholdNonCritical *float32 `json:"LowerThresholdNonCritical,omitempty"`

	// Maximum value for this sensor.
	MaxReadingRange *float32 `json:"MaxReadingRange,omitempty"`

	// The identifier for the member within the collection.
	MemberId string `json:"MemberId"`

	// Minimum value for this sensor.
	MinReadingRange *float32 `json:"MinReadingRange,omitempty"`

	// Voltage sensor name.
	Name string `json:"Name,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	PhysicalContext PhysicalContextPhysicalContext `json:"PhysicalContext,omitempty"`

	// The reading of the voltage sensor.
	ReadingVolts *float32 `json:"ReadingVolts,omitempty"`

	// An array of links to resources or objects to which this voltage measurement applies.
	RelatedItem []OdataV4IdRef `json:"RelatedItem,omitempty"`

	// The number of items in a collection.
	RelatedItemodataCount int64 `json:"RelatedItem@odata.count,omitempty"`

	// A numerical identifier to represent the voltage sensor.
	SensorNumber int64 `json:"SensorNumber,omitempty"`

	Status ResourceStatus `json:"Status,omitempty"`

	// The value at which the reading is above normal range but not yet fatal.
	UpperThresholdCritical *float32 `json:"UpperThresholdCritical,omitempty"`

	// The value at which the reading is above normal range and fatal.
	UpperThresholdFatal *float32 `json:"UpperThresholdFatal,omitempty"`

	// The value at which the reading is above normal range.
	UpperThresholdNonCritical *float32 `json:"UpperThresholdNonCritical,omitempty"`
}
