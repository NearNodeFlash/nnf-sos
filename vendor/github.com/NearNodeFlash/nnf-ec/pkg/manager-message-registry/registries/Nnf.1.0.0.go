/*
 * Copyright 2020-2025 Hewlett Packard Enterprise Development LP
 * Other additional copyright holders may be indicated within.
 *
 * The entirety of this work is licensed under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 *
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by msgenerator ./registries/Nnf.1.0.0.json; DO NOT EDIT

package messageregistry

import events "github.com/NearNodeFlash/nnf-ec/pkg/manager-event"

// ResourceOperationFailedNnf - event indicating that a requested operation on a resource type has failed
// arg0: The schema name. This argument shall contain the schema name of the resource type.
// arg1: The error message. This argument shall contain the error message that was returned by the resource type.
func ResourceOperationFailedNnf(arg0, arg1 string) events.Event {
	return events.Event{
		Message:         "The requested operation on resource type '%1' failed with error '%2'",
		MessageSeverity: "Critical",
		MessageId:       "Nnf.1.0.0.ResourceOperationFailed",
		MessageArgs:     []string{arg0, arg1},
	}
}

// StoragePoolPatchedNnf - event indicating that a storage pool has been patched.
// arg0: The storage pool identifier. This argument shall contain the storage pool resource identifier.
// arg1: The durable name of the storage device that was replaced.
// arg2: The namespace id on the storage device that was replaced.
// arg3: The durable name of the new storage device.
// arg4: The namespace id on the new storage device.
func StoragePoolPatchedNnf(arg0, arg1, arg2, arg3, arg4 string) events.Event {
	return events.Event{
		Message:         "The storage pool '%1' has been patched, old storage '%2', old namespace id '%3', new storage '%4', new namespace id '%5'",
		MessageSeverity: "OK",
		MessageId:       "Nnf.1.0.0.StoragePoolPatched",
		MessageArgs:     []string{arg0, arg1, arg2, arg3, arg4},
	}
}

// FabricReadyNnf - event indicating that a fabric is ready
// arg0: The fabric identifier. This argument shall contain the fabric resource identifier.
func FabricReadyNnf(arg0 string) events.Event {
	return events.Event{
		Message:         "The fabric '%1' is ready",
		MessageSeverity: "OK",
		MessageId:       "Nnf.1.0.0.FabricReady",
		MessageArgs:     []string{arg0},
	}
}

// NvmeStateChangeNnf - event indicating that a drive's state has changed
// arg0: The slot identifier. This argument shall contain the NVMe slot number.
// arg1: The model number. This argument shall contain the NVMe model number.
// arg2: The serial number. This argument shall contain the NVMe serial number.
func NvmeStateChangeNnf(arg0, arg1, arg2 string) events.Event {
	return events.Event{
		Message:         "The Nvme State changed slot '%1', model '%2', serial '%3'",
		MessageSeverity: "Warning",
		MessageId:       "Nnf.1.0.0.NvmeStateChanged",
		MessageArgs:     []string{arg0, arg1, arg2},
	}
}
