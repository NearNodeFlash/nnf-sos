/*
 * Swordfish API
 *
 * This contains the definition of the Swordfish extensions to a Redfish service.
 *
 * API version: v1.2.c
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// VolumeV161Volume - Volume contains properties used to describe a volume, virtual disk, LUN, or other logical storage entity for any system.
type VolumeV161Volume struct {

	// The OData description of a payload.
	OdataContext string `json:"@odata.context,omitempty"`

	// The current ETag of the resource.
	OdataEtag string `json:"@odata.etag,omitempty"`

	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`

	// The type of a resource.
	OdataType string `json:"@odata.type"`

	// Supported IO access capabilities.
	AccessCapabilities []DataStorageLoSCapabilitiesStorageAccessCapability `json:"AccessCapabilities,omitempty"`

	Actions VolumeV161Actions `json:"Actions,omitempty"`

	AllocatedPools OdataV4IdRef `json:"AllocatedPools,omitempty"`

	// The size of the smallest addressable unit (Block) of this volume in bytes.
	BlockSizeBytes int64 `json:"BlockSizeBytes,omitempty"`

	Capacity CapacityV100Capacity `json:"Capacity,omitempty"`

	// The size in bytes of this Volume.
	CapacityBytes int64 `json:"CapacityBytes,omitempty"`

	// An array of space allocations to this volume.
	CapacitySources []CapacityCapacitySource `json:"CapacitySources,omitempty"`

	// The number of items in a collection.
	CapacitySourcesodataCount int64 `json:"CapacitySources@odata.count,omitempty"`

	// Indicator of whether or not the Volume has compression enabled.
	Compressed bool `json:"Compressed,omitempty"`

	// Indicator of whether or not the Volume has deduplication enabled.
	Deduplicated bool `json:"Deduplicated,omitempty"`

	// The description of this resource.  Used for commonality in the schema definitions.
	Description string `json:"Description,omitempty"`

	// A user-configurable string to name the volume.
	DisplayName string `json:"DisplayName,omitempty"`

	// Is this Volume encrypted.
	Encrypted bool `json:"Encrypted,omitempty"`

	// The types of encryption used by this Volume.
	EncryptionTypes []VolumeEncryptionTypes `json:"EncryptionTypes,omitempty"`

	// Indicates the IO performance mode setting for the volume.
	IOPerfModeEnabled bool `json:"IOPerfModeEnabled,omitempty"`

	IOStatistics IoStatisticsIoStatistics `json:"IOStatistics,omitempty"`

	// The identifier that uniquely identifies the resource within the collection of similar resources.
	Id string `json:"Id"`

	// The Durable names for the volume.
	Identifiers []ResourceIdentifier `json:"Identifiers,omitempty"`

	InitializeMethod VolumeInitializeMethod `json:"InitializeMethod,omitempty"`

	Links VolumeV161Links `json:"Links,omitempty"`

	// Indicates the host-visible LogicalUnitNumber assigned to this Volume.
	LogicalUnitNumber int64 `json:"LogicalUnitNumber,omitempty"`

	// Low space warning.
	LowSpaceWarningThresholdPercents []int64 `json:"LowSpaceWarningThresholdPercents,omitempty"`

	// The manufacturer or OEM of this storage volume.
	Manufacturer string `json:"Manufacturer,omitempty"`

	// Max Block size in bytes.
	MaxBlockSizeBytes int64 `json:"MaxBlockSizeBytes,omitempty"`

	// Indicates the number of media elements used per span in the secondary RAID for a hierarchical RAID type.
	MediaSpanCount int64 `json:"MediaSpanCount,omitempty"`

	// The model number for this storage volume.
	Model string `json:"Model,omitempty"`

	NVMeNamespaceProperties VolumeV161NvMeNamespaceProperties `json:"NVMeNamespaceProperties,omitempty"`

	// The name of the resource or array member.
	Name string `json:"Name"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// The operations currently running on the Volume.
	Operations []VolumeV161Operation `json:"Operations,omitempty"`

	// The size in bytes of this Volume's optimum IO size.
	OptimumIOSizeBytes int64 `json:"OptimumIOSizeBytes,omitempty"`

	ProvisioningPolicy DataStorageLoSCapabilitiesProvisioningPolicy `json:"ProvisioningPolicy,omitempty"`

	RAIDType VolumeRAIDType `json:"RAIDType,omitempty"`

	ReadCachePolicy VolumeReadCachePolicyType `json:"ReadCachePolicy,omitempty"`

	// Current number of capacity source resources that are available as replacements.
	RecoverableCapacitySourceCount int64 `json:"RecoverableCapacitySourceCount,omitempty"`

	// The percentage of the capacity remaining in the Volume.
	RemainingCapacityPercent int64 `json:"RemainingCapacityPercent,omitempty"`

	ReplicaInfo StorageReplicaInfoV130ReplicaInfo `json:"ReplicaInfo,omitempty"`

	// The resources that are target replicas of this source.
	ReplicaTargets []OdataV4IdRef `json:"ReplicaTargets,omitempty"`

	// The number of items in a collection.
	ReplicaTargetsodataCount int64 `json:"ReplicaTargets@odata.count,omitempty"`

	Status ResourceStatus `json:"Status,omitempty"`

	StorageGroups OdataV4IdRef `json:"StorageGroups,omitempty"`

	// The number of blocks (bytes) in a strip in a disk array that uses striped data mapping.
	StripSizeBytes int64 `json:"StripSizeBytes,omitempty"`

	VolumeType VolumeVolumeType `json:"VolumeType,omitempty"`

	VolumeUsage VolumeVolumeUsageType `json:"VolumeUsage,omitempty"`

	WriteCachePolicy VolumeWriteCachePolicyType `json:"WriteCachePolicy,omitempty"`

	WriteCacheState VolumeWriteCacheStateType `json:"WriteCacheState,omitempty"`

	WriteHoleProtectionPolicy VolumeWriteHoleProtectionPolicyType `json:"WriteHoleProtectionPolicy,omitempty"`
}
