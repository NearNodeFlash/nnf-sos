/*
 * Swordfish API
 *
 * This contains the definition of the Swordfish extensions to a Redfish service.
 *
 * API version: v1.2.c
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// TaskV150Task - The Task schema contains information about a task that the Redfish Task Service schedules or executes.  Tasks represent operations that take more time than a client typically wants to wait.
type TaskV150Task struct {

	// The OData description of a payload.
	OdataContext string `json:"@odata.context,omitempty"`

	// The current ETag of the resource.
	OdataEtag string `json:"@odata.etag,omitempty"`

	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`

	// The type of a resource.
	OdataType string `json:"@odata.type"`

	Actions TaskV150Actions `json:"Actions,omitempty"`

	// The description of this resource.  Used for commonality in the schema definitions.
	Description string `json:"Description,omitempty"`

	// The date and time when the task was completed.  This property will only appear when the task is complete.
	EndTime time.Time `json:"EndTime,omitempty"`

	// An indication of whether the contents of the payload are hidden from view after the task has been created.  If `true`, responses do not return the payload.  If `false`, responses return the payload.  If this property is not present when the task is created, the default is `false`.
	HidePayload bool `json:"HidePayload,omitempty"`

	// The identifier that uniquely identifies the resource within the collection of similar resources.
	Id string `json:"Id"`

	// An array of messages associated with the task.
	Messages []MessageMessage `json:"Messages,omitempty"`

	// The name of the resource or array member.
	Name string `json:"Name"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	Payload TaskV150Payload `json:"Payload,omitempty"`

	// The completion percentage of this task.
	PercentComplete int64 `json:"PercentComplete,omitempty"`

	// The date and time when the task was started.
	StartTime time.Time `json:"StartTime,omitempty"`

	SubTasks OdataV4IdRef `json:"SubTasks,omitempty"`

	// The URI of the Task Monitor for this task.
	TaskMonitor string `json:"TaskMonitor,omitempty"`

	TaskState TaskV150TaskState `json:"TaskState,omitempty"`

	TaskStatus ResourceHealth `json:"TaskStatus,omitempty"`
}
