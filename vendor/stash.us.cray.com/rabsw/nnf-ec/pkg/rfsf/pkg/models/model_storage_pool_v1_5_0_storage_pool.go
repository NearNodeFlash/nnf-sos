/*
 * Swordfish API
 *
 * This contains the definition of the Swordfish extensions to a Redfish service.
 *
 * API version: v1.2.c
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// StoragePoolV150StoragePool - A container of data storage.
type StoragePoolV150StoragePool struct {

	// The OData description of a payload.
	OdataContext string `json:"@odata.context,omitempty"`

	// The current ETag of the resource.
	OdataEtag string `json:"@odata.etag,omitempty"`

	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`

	// The type of a resource.
	OdataType string `json:"@odata.type"`

	Actions StoragePoolV150Actions `json:"Actions,omitempty"`

	AllocatedPools OdataV4IdRef `json:"AllocatedPools,omitempty"`

	AllocatedVolumes OdataV4IdRef `json:"AllocatedVolumes,omitempty"`

	// Maximum Block size in bytes.
	BlockSizeBytes int64 `json:"BlockSizeBytes,omitempty"`

	// The size, in bytes, of the storage pool.
	CapacityBytes int64 `json:"CapacityBytes,omitempty"`

	// Detailed capacity for the storage pool.
	Capacity CapacityV100Capacity `json:"Capacity,omitempty"`

	// An array of space allocations to this store.
	CapacitySources []CapacityCapacitySource `json:"CapacitySources,omitempty"`

	// The number of items in a collection.
	CapacitySourcesodataCount int64 `json:"CapacitySources@odata.count,omitempty"`

	ClassesOfService OdataV4IdRef `json:"ClassesOfService,omitempty"`

	// Indicator of whether or not the StoragePool has compression enabled.
	Compressed bool `json:"Compressed,omitempty"`

	// Indicator of whether or not the StoragePool has deduplication enabled.
	Deduplicated bool `json:"Deduplicated,omitempty"`

	DefaultClassOfService OdataV4IdRef `json:"DefaultClassOfService,omitempty"`

	// The description of this resource.  Used for commonality in the schema definitions.
	Description string `json:"Description,omitempty"`

	// Indicator of whether or not the StoragePool has encryption enabled.
	Encrypted bool `json:"Encrypted,omitempty"`

	IOStatistics IoStatisticsIoStatistics `json:"IOStatistics,omitempty"`

	// The identifier that uniquely identifies the resource within the collection of similar resources.
	Id string `json:"Id"`

	Identifier ResourceIdentifier `json:"Identifier,omitempty"`

	Links StoragePoolV150Links `json:"Links,omitempty"`

	// Low space warning threshold specified in percents.
	LowSpaceWarningThresholdPercents []int64 `json:"LowSpaceWarningThresholdPercents,omitempty"`

	// Maximum Block size in bytes.
	MaxBlockSizeBytes int64 `json:"MaxBlockSizeBytes,omitempty"`

	NVMeEnduranceGroupProperties StoragePoolV150NvMeEnduranceGroupProperties `json:"NVMeEnduranceGroupProperties,omitempty"`

	NVMeSetProperties StoragePoolV150NvMeSetProperties `json:"NVMeSetProperties,omitempty"`

	// The name of the resource or array member.
	Name string `json:"Name"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// Current number of capacity source resources that are available as replacements.
	RecoverableCapacitySourceCount int64 `json:"RecoverableCapacitySourceCount,omitempty"`

	// The percentage of the capacity remaining in the StoragePool.
	RemainingCapacityPercent int64 `json:"RemainingCapacityPercent,omitempty"`

	Status ResourceStatus `json:"Status,omitempty"`

	// This collection specifies all supported storage allocation properties for the Storage Pool.
	SupportedProvisioningPolicies []DataStorageLoSCapabilitiesProvisioningPolicy `json:"SupportedProvisioningPolicies,omitempty"`

	// A collection of the RAID Types supported by the storage pool.
	SupportedRAIDTypes []VolumeRAIDType `json:"SupportedRAIDTypes,omitempty"`
}
