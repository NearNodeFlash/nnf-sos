/*
 * Swordfish API
 *
 * This contains the definition of the Swordfish extensions to a Redfish service.
 *
 * API version: v1.0.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// Memory - This is the schema definition for definition of a Memory and its configuration.
type Memory struct {
	OdataContext string `json:"@odata.context,omitempty"`

	OdataEtag string `json:"@odata.etag,omitempty"`

	OdataId string `json:"@odata.id"`

	OdataType string `json:"@odata.type"`

	Actions map[string]interface{} `json:"Actions,omitempty"`

	// The boundary which memory regions are allocated on, measured in mebibytes (MiB).
	AllocationAlignmentMiB int32 `json:"AllocationAlignmentMiB,omitempty"`

	// The size of the smallest unit of allocation for a memory region in mebibytes (MiB).
	AllocationIncrementMiB int32 `json:"AllocationIncrementMiB,omitempty"`

	// Speed bins supported by this Memory.
	AllowedSpeedsMHz []int32 `json:"AllowedSpeedsMHz,omitempty"`

	Assembly map[string]interface{} `json:"Assembly,omitempty"`

	BaseModuleType map[string]interface{} `json:"BaseModuleType,omitempty"`

	// Bus Width in bits.
	BusWidthBits int32 `json:"BusWidthBits,omitempty"`

	// Total size of the cache portion memory in MiB.
	CacheSizeMiB int32 `json:"CacheSizeMiB,omitempty"`

	// Memory Capacity in mebibytes (MiB).
	CapacityMiB int32 `json:"CapacityMiB,omitempty"`

	// Data Width in bits.
	DataWidthBits int32 `json:"DataWidthBits,omitempty"`

	Description string `json:"Description,omitempty"`

	// Device ID.
	DeviceID string `json:"DeviceID,omitempty"`

	// Location of the Memory in the platform.
	DeviceLocator string `json:"DeviceLocator,omitempty"`

	ErrorCorrection map[string]interface{} `json:"ErrorCorrection,omitempty"`

	// Version of API supported by the firmware.
	FirmwareApiVersion string `json:"FirmwareApiVersion,omitempty"`

	// Revision of firmware on the Memory controller.
	FirmwareRevision string `json:"FirmwareRevision,omitempty"`

	// Function Classes by the Memory.
	FunctionClasses []string `json:"FunctionClasses,omitempty"`

	Id string `json:"Id"`

	// Rank spare enabled status.
	IsRankSpareEnabled bool `json:"IsRankSpareEnabled,omitempty"`

	// Spare device enabled status.
	IsSpareDeviceEnabled bool `json:"IsSpareDeviceEnabled,omitempty"`

	Links map[string]interface{} `json:"Links,omitempty"`

	Location map[string]interface{} `json:"Location,omitempty"`

	// Total size of the logical memory in MiB.
	LogicalSizeMiB int32 `json:"LogicalSizeMiB,omitempty"`

	// The Memory manufacturer.
	Manufacturer string `json:"Manufacturer,omitempty"`

	// Maximum TDPs in milli Watts.
	MaxTDPMilliWatts []int32 `json:"MaxTDPMilliWatts,omitempty"`

	MemoryDeviceType map[string]interface{} `json:"MemoryDeviceType,omitempty"`

	MemoryLocation map[string]interface{} `json:"MemoryLocation,omitempty"`

	// Media of this Memory.
	MemoryMedia []MemoryMedia `json:"MemoryMedia,omitempty"`

	// The manufacturer ID of the memory subsystem controller of this memory module.
	MemorySubsystemControllerManufacturerID string `json:"MemorySubsystemControllerManufacturerID,omitempty"`

	// The product ID of the memory subsystem controller of this memory module.
	MemorySubsystemControllerProductID string `json:"MemorySubsystemControllerProductID,omitempty"`

	MemoryType map[string]interface{} `json:"MemoryType,omitempty"`

	Metrics map[string]interface{} `json:"Metrics,omitempty"`

	// The manufacturer ID of this memory module.
	ModuleManufacturerID string `json:"ModuleManufacturerID,omitempty"`

	// The product ID of this memory module.
	ModuleProductID string `json:"ModuleProductID,omitempty"`

	Name string `json:"Name"`

	// Total size of the non-volatile portion memory in MiB.
	NonVolatileSizeMiB int32 `json:"NonVolatileSizeMiB,omitempty"`

	Oem map[string]interface{} `json:"Oem,omitempty"`

	// Memory modes supported by the Memory.
	OperatingMemoryModes []OperatingMemoryModes `json:"OperatingMemoryModes,omitempty"`

	// Operating speed of Memory in MHz or MT/s as appropriate.
	OperatingSpeedMhz int32 `json:"OperatingSpeedMhz,omitempty"`

	// The product part number of this device.
	PartNumber string `json:"PartNumber,omitempty"`

	// Total number of persistent regions this Memory can support.
	PersistentRegionNumberLimit int32 `json:"PersistentRegionNumberLimit,omitempty"`

	// Total size of persistent regions in mebibytes (MiB).
	PersistentRegionSizeLimitMiB int32 `json:"PersistentRegionSizeLimitMiB,omitempty"`

	// Maximum size of a single persistent region in mebibytes (MiB).
	PersistentRegionSizeMaxMiB int32 `json:"PersistentRegionSizeMaxMiB,omitempty"`

	PowerManagementPolicy map[string]interface{} `json:"PowerManagementPolicy,omitempty"`

	// Number of ranks available in the Memory.
	RankCount int32 `json:"RankCount,omitempty"`

	// Memory regions information within the Memory.
	Regions []RegionSet `json:"Regions,omitempty"`

	SecurityCapabilities map[string]interface{} `json:"SecurityCapabilities,omitempty"`

	// The product serial number of this device.
	SerialNumber string `json:"SerialNumber,omitempty"`

	// Number of unused spare devices available in the Memory.
	SpareDeviceCount int32 `json:"SpareDeviceCount,omitempty"`

	Status map[string]interface{} `json:"Status,omitempty"`

	// Subsystem Device ID.
	SubsystemDeviceID string `json:"SubsystemDeviceID,omitempty"`

	// SubSystem Vendor ID.
	SubsystemVendorID string `json:"SubsystemVendorID,omitempty"`

	// Vendor ID.
	VendorID string `json:"VendorID,omitempty"`

	// Total number of volatile regions this Memory can support.
	VolatileRegionNumberLimit int32 `json:"VolatileRegionNumberLimit,omitempty"`

	// Total size of volatile regions in mebibytes (MiB).
	VolatileRegionSizeLimitMiB int32 `json:"VolatileRegionSizeLimitMiB,omitempty"`

	// Maximum size of a single volatile region in mebibytes (MiB).
	VolatileRegionSizeMaxMiB int32 `json:"VolatileRegionSizeMaxMiB,omitempty"`

	// Total size of the volitile portion memory in MiB.
	VolatileSizeMiB int32 `json:"VolatileSizeMiB,omitempty"`
}
