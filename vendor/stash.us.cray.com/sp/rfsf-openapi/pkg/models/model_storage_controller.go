/*
 * Swordfish API
 *
 * This contains the definition of the Swordfish extensions to a Redfish service.
 *
 * API version: v1.0.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// StorageController - This schema defines a storage controller and its respective properties.  A storage controller represents a storage device (physical or virtual) that produces Volumes.
type StorageController struct {
	OdataId string `json:"@odata.id"`

	Actions map[string]interface{} `json:"Actions,omitempty"`

	Assembly map[string]interface{} `json:"Assembly,omitempty"`

	// The user assigned asset tag for this storage controller.
	AssetTag string `json:"AssetTag,omitempty"`

	CacheSummary map[string]interface{} `json:"CacheSummary,omitempty"`

	// The firmware version of this storage Controller.
	FirmwareVersion string `json:"FirmwareVersion,omitempty"`

	// The Durable names for the storage controller.
	Identifiers []map[string]interface{} `json:"Identifiers,omitempty"`

	Links map[string]interface{} `json:"Links,omitempty"`

	Location map[string]interface{} `json:"Location,omitempty"`

	// This is the manufacturer of this storage controller.
	Manufacturer string `json:"Manufacturer,omitempty"`

	// This is the identifier for the member within the collection.
	MemberId string `json:"MemberId"`

	// This is the model number for the storage controller.
	Model string `json:"Model,omitempty"`

	// The name of the Storage Controller.
	Name string `json:"Name,omitempty"`

	Oem map[string]interface{} `json:"Oem,omitempty"`

	PCIeInterface map[string]interface{} `json:"PCIeInterface,omitempty"`

	// The part number for this storage controller.
	PartNumber string `json:"PartNumber,omitempty"`

	// This is the SKU for this storage controller.
	SKU string `json:"SKU,omitempty"`

	// The serial number for this storage controller.
	SerialNumber string `json:"SerialNumber,omitempty"`

	// The maximum speed of the storage controller's device interface.
	SpeedGbps float32 `json:"SpeedGbps,omitempty"`

	Status map[string]interface{} `json:"Status,omitempty"`

	// This represents the protocols by which this storage controller can be communicated to.
	SupportedControllerProtocols []map[string]interface{} `json:"SupportedControllerProtocols,omitempty"`

	// This represents the protocols which the storage controller can use to communicate with attached devices.
	SupportedDeviceProtocols []map[string]interface{} `json:"SupportedDeviceProtocols,omitempty"`
}
