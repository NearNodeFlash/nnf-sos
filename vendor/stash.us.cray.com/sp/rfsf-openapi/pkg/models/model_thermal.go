/*
 * Swordfish API
 *
 * This contains the definition of the Swordfish extensions to a Redfish service.
 *
 * API version: v1.0.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// Thermal - This is the schema definition for the Thermal properties.  It represents the properties for Temperature and Cooling.
type Thermal struct {
	OdataContext string `json:"@odata.context,omitempty"`

	OdataEtag string `json:"@odata.etag,omitempty"`

	OdataId string `json:"@odata.id"`

	OdataType string `json:"@odata.type"`

	Actions map[string]interface{} `json:"Actions,omitempty"`

	Description string `json:"Description,omitempty"`

	// This is the definition for fans.
	Fans []Fan `json:"Fans,omitempty"`

	FansodataCount map[string]interface{} `json:"Fans@odata.count,omitempty"`

	Id string `json:"Id"`

	Name string `json:"Name"`

	Oem map[string]interface{} `json:"Oem,omitempty"`

	// This structure is used to show redundancy for fans.  The Component ids will reference the members of the redundancy groups.
	Redundancy []map[string]interface{} `json:"Redundancy,omitempty"`

	RedundancyodataCount map[string]interface{} `json:"Redundancy@odata.count,omitempty"`

	Status map[string]interface{} `json:"Status,omitempty"`

	// This is the definition for temperature sensors.
	Temperatures []Temperature `json:"Temperatures,omitempty"`

	TemperaturesodataCount map[string]interface{} `json:"Temperatures@odata.count,omitempty"`
}
