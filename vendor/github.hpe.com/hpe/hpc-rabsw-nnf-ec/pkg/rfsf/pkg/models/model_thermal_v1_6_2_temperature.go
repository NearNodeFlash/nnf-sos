/*
 * Swordfish API
 *
 * This contains the definition of the Swordfish extensions to a Redfish service.
 *
 * API version: v1.2.c
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ThermalV162Temperature struct {

	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`

	Actions ThermalV162TemperatureActions `json:"Actions,omitempty"`

	// Adjusted maximum allowable operating temperature for this equipment based on the current environmental conditions present.
	AdjustedMaxAllowableOperatingValue int64 `json:"AdjustedMaxAllowableOperatingValue,omitempty"`

	// Adjusted minimum allowable operating temperature for this equipment based on the current environmental conditions present.
	AdjustedMinAllowableOperatingValue int64 `json:"AdjustedMinAllowableOperatingValue,omitempty"`

	DeltaPhysicalContext PhysicalContextPhysicalContext `json:"DeltaPhysicalContext,omitempty"`

	// The delta temperature reading.
	DeltaReadingCelsius *float32 `json:"DeltaReadingCelsius,omitempty"`

	// The value at which the reading is below normal range but not yet fatal.
	LowerThresholdCritical *float32 `json:"LowerThresholdCritical,omitempty"`

	// The value at which the reading is below normal range and fatal.
	LowerThresholdFatal *float32 `json:"LowerThresholdFatal,omitempty"`

	// The value at which the reading is below normal range.
	LowerThresholdNonCritical *float32 `json:"LowerThresholdNonCritical,omitempty"`

	// The value at which the reading is below the user-defined range.
	LowerThresholdUser int64 `json:"LowerThresholdUser,omitempty"`

	// Maximum allowable operating temperature for this equipment.
	MaxAllowableOperatingValue int64 `json:"MaxAllowableOperatingValue,omitempty"`

	// Maximum value for this sensor.
	MaxReadingRangeTemp *float32 `json:"MaxReadingRangeTemp,omitempty"`

	// The identifier for the member within the collection.
	MemberId string `json:"MemberId"`

	// Minimum allowable operating temperature for this equipment.
	MinAllowableOperatingValue int64 `json:"MinAllowableOperatingValue,omitempty"`

	// Minimum value for this sensor.
	MinReadingRangeTemp *float32 `json:"MinReadingRangeTemp,omitempty"`

	// The temperature sensor name.
	Name string `json:"Name,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	PhysicalContext PhysicalContextPhysicalContext `json:"PhysicalContext,omitempty"`

	// The temperature in degrees Celsius.
	ReadingCelsius *float32 `json:"ReadingCelsius,omitempty"`

	// An array of links to resources or objects that represent areas or devices to which this temperature applies.
	RelatedItem []OdataV4IdRef `json:"RelatedItem,omitempty"`

	// The number of items in a collection.
	RelatedItemodataCount int64 `json:"RelatedItem@odata.count,omitempty"`

	// The numerical identifier of the temperature sensor.
	SensorNumber int64 `json:"SensorNumber,omitempty"`

	Status ResourceStatus `json:"Status,omitempty"`

	// The value at which the reading is above normal range but not yet fatal.
	UpperThresholdCritical *float32 `json:"UpperThresholdCritical,omitempty"`

	// The value at which the reading is above normal range and fatal.
	UpperThresholdFatal *float32 `json:"UpperThresholdFatal,omitempty"`

	// The value at which the reading is above normal range.
	UpperThresholdNonCritical *float32 `json:"UpperThresholdNonCritical,omitempty"`

	// The value at which the reading is above the user-defined range.
	UpperThresholdUser int64 `json:"UpperThresholdUser,omitempty"`
}
