---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: nnfaccesses.nnf.cray.hpe.com
spec:
  group: nnf.cray.hpe.com
  names:
    kind: NnfAccess
    listKind: NnfAccessList
    plural: nnfaccesses
    singular: nnfaccess
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The desired state
      jsonPath: .spec.desiredState
      name: DESIREDSTATE
      type: string
    - description: The current state
      jsonPath: .status.state
      name: STATE
      type: string
    - description: Whether the state has been achieved
      jsonPath: .status.ready
      name: READY
      type: boolean
    - jsonPath: .status.error.severity
      name: ERROR
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: NnfAccess is the Schema for the nnfaccesses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NnfAccessSpec defines the desired state of NnfAccess
            properties:
              clientReference:
                description: |-
                  ClientReference is for a client resource. (DWS) Computes is the only client
                  resource type currently supported
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              desiredState:
                description: DesiredState is the desired state for the mounts on the
                  client
                enum:
                - mounted
                - unmounted
                type: string
              groupID:
                description: GroupID for the new mount. Currently only used for raw
                format: int32
                type: integer
              makeClientMounts:
                default: true
                description: |-
                  MakeClientMounts determines whether the ClientMount resources are made, or if only
                  the access list on the NnfNodeBlockStorage is updated
                type: boolean
              mountPath:
                description: MountPath for the storage target on the client
                type: string
              mountPathPrefix:
                type: string
              storageReference:
                description: StorageReference is the NnfStorage reference
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              target:
                description: |-
                  Target specifies which storage targets the client should mount
                  - single: Only one of the storage the client can access
                  - all: All of the storage the client can access
                  - shared: Multiple clients access the same storage
                enum:
                - single
                - all
                - shared
                type: string
              teardownState:
                allOf:
                - enum:
                  - Proposal
                  - Setup
                  - DataIn
                  - PreRun
                  - PostRun
                  - DataOut
                  - Teardown
                - enum:
                  - PreRun
                  - PostRun
                  - Teardown
                description: |-
                  TeardownState is the desired state of the workflow for this NNF Access resource to
                  be torn down and deleted.
                type: string
              userID:
                description: UserID for the new mount. Currently only used for raw
                format: int32
                type: integer
            required:
            - desiredState
            - groupID
            - makeClientMounts
            - storageReference
            - target
            - teardownState
            - userID
            type: object
          status:
            description: NnfAccessStatus defines the observed state of NnfAccess
            properties:
              error:
                description: Error information
                properties:
                  debugMessage:
                    description: Internal debug message for the error
                    type: string
                  severity:
                    description: |-
                      Indication of how severe the error is. Minor will likely succeed, Major may
                      succeed, and Fatal will never succeed.
                    enum:
                    - Minor
                    - Major
                    - Fatal
                    type: string
                  type:
                    description: Internal or user error
                    enum:
                    - Internal
                    - User
                    - WLM
                    type: string
                  userMessage:
                    description: Optional user facing message if the error is relevant
                      to an end user
                    type: string
                required:
                - debugMessage
                - severity
                - type
                type: object
              ready:
                description: Ready signifies whether status.state has been achieved
                type: boolean
              state:
                description: State is the current state
                enum:
                - mounted
                - unmounted
                type: string
            required:
            - ready
            - state
            type: object
        type: object
    served: false
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The desired state
      jsonPath: .spec.desiredState
      name: DESIREDSTATE
      type: string
    - description: The current state
      jsonPath: .status.state
      name: STATE
      type: string
    - description: Whether the state has been achieved
      jsonPath: .status.ready
      name: READY
      type: boolean
    - jsonPath: .status.error.severity
      name: ERROR
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: NnfAccess is the Schema for the nnfaccesses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NnfAccessSpec defines the desired state of NnfAccess
            properties:
              clientReference:
                description: |-
                  ClientReference is for a client resource. (DWS) Computes is the only client
                  resource type currently supported
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              desiredState:
                description: DesiredState is the desired state for the mounts on the
                  client
                enum:
                - mounted
                - unmounted
                type: string
              groupID:
                description: GroupID for the new mount. Currently only used for raw
                format: int32
                type: integer
              makeClientMounts:
                default: true
                description: |-
                  MakeClientMounts determines whether the ClientMount resources are made, or if only
                  the access list on the NnfNodeBlockStorage is updated
                type: boolean
              mountPath:
                description: MountPath for the storage target on the client
                type: string
              mountPathPrefix:
                type: string
              storageReference:
                description: StorageReference is the NnfStorage reference
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              target:
                description: |-
                  Target specifies which storage targets the client should mount
                  - single: Only one of the storage the client can access
                  - all: All of the storage the client can access
                  - shared: Multiple clients access the same storage
                enum:
                - single
                - all
                - shared
                type: string
              teardownState:
                allOf:
                - enum:
                  - Proposal
                  - Setup
                  - DataIn
                  - PreRun
                  - PostRun
                  - DataOut
                  - Teardown
                - enum:
                  - PreRun
                  - PostRun
                  - Teardown
                description: |-
                  TeardownState is the desired state of the workflow for this NNF Access resource to
                  be torn down and deleted.
                type: string
              userID:
                description: UserID for the new mount. Currently only used for raw
                format: int32
                type: integer
            required:
            - desiredState
            - groupID
            - makeClientMounts
            - storageReference
            - target
            - teardownState
            - userID
            type: object
          status:
            description: NnfAccessStatus defines the observed state of NnfAccess
            properties:
              error:
                description: Error information
                properties:
                  debugMessage:
                    description: Internal debug message for the error
                    type: string
                  severity:
                    description: |-
                      Indication of how severe the error is. Minor will likely succeed, Major may
                      succeed, and Fatal will never succeed.
                    enum:
                    - Minor
                    - Major
                    - Fatal
                    type: string
                  type:
                    description: Internal or user error
                    enum:
                    - Internal
                    - User
                    - WLM
                    type: string
                  userMessage:
                    description: Optional user facing message if the error is relevant
                      to an end user
                    type: string
                required:
                - debugMessage
                - severity
                - type
                type: object
              ready:
                description: Ready signifies whether status.state has been achieved
                type: boolean
              state:
                description: State is the current state
                enum:
                - mounted
                - unmounted
                type: string
            required:
            - ready
            - state
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The desired state
      jsonPath: .spec.desiredState
      name: DESIREDSTATE
      type: string
    - description: The current state
      jsonPath: .status.state
      name: STATE
      type: string
    - description: Whether the state has been achieved
      jsonPath: .status.ready
      name: READY
      type: boolean
    - jsonPath: .status.error.severity
      name: ERROR
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: NnfAccess is the Schema for the nnfaccesses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NnfAccessSpec defines the desired state of NnfAccess
            properties:
              clientReference:
                description: |-
                  ClientReference is for a client resource. (DWS) Computes is the only client
                  resource type currently supported
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              desiredState:
                description: DesiredState is the desired state for the mounts on the
                  client
                enum:
                - mounted
                - unmounted
                type: string
              groupID:
                description: GroupID for the new mount. Currently only used for raw
                format: int32
                type: integer
              ignoreOfflineComputes:
                default: false
                type: boolean
              makeClientMounts:
                default: true
                description: |-
                  MakeClientMounts determines whether the ClientMount resources are made, or if only
                  the access list on the NnfNodeBlockStorage is updated
                type: boolean
              mountPath:
                description: MountPath for the storage target on the client
                type: string
              mountPathPrefix:
                type: string
              storageReference:
                description: StorageReference is the NnfStorage reference
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              target:
                description: |-
                  Target specifies which storage targets the client should mount
                  - single: Only one of the storage the client can access
                  - all: All of the storage the client can access
                  - shared: Multiple clients access the same storage
                enum:
                - single
                - all
                - shared
                type: string
              teardownState:
                allOf:
                - enum:
                  - Proposal
                  - Setup
                  - DataIn
                  - PreRun
                  - PostRun
                  - DataOut
                  - Teardown
                - enum:
                  - PreRun
                  - PostRun
                  - Teardown
                description: |-
                  TeardownState is the desired state of the workflow for this NNF Access resource to
                  be torn down and deleted.
                type: string
              userID:
                description: UserID for the new mount. Currently only used for raw
                format: int32
                type: integer
            required:
            - desiredState
            - groupID
            - ignoreOfflineComputes
            - makeClientMounts
            - storageReference
            - target
            - teardownState
            - userID
            type: object
          status:
            description: NnfAccessStatus defines the observed state of NnfAccess
            properties:
              error:
                description: Error information
                properties:
                  debugMessage:
                    description: Internal debug message for the error
                    type: string
                  severity:
                    description: |-
                      Indication of how severe the error is. Minor will likely succeed, Major may
                      succeed, and Fatal will never succeed.
                    enum:
                    - Minor
                    - Major
                    - Fatal
                    type: string
                  type:
                    description: Internal or user error
                    enum:
                    - Internal
                    - User
                    - WLM
                    type: string
                  userMessage:
                    description: Optional user facing message if the error is relevant
                      to an end user
                    type: string
                required:
                - debugMessage
                - severity
                - type
                type: object
              ready:
                description: Ready signifies whether status.state has been achieved
                type: boolean
              state:
                description: State is the current state
                enum:
                - mounted
                - unmounted
                type: string
            required:
            - ready
            - state
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The desired state
      jsonPath: .spec.desiredState
      name: DESIREDSTATE
      type: string
    - description: The current state
      jsonPath: .status.state
      name: STATE
      type: string
    - description: Whether the state has been achieved
      jsonPath: .status.ready
      name: READY
      type: boolean
    - jsonPath: .status.error.severity
      name: ERROR
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha5
    schema:
      openAPIV3Schema:
        description: NnfAccess is the Schema for the nnfaccesses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NnfAccessSpec defines the desired state of NnfAccess
            properties:
              clientReference:
                description: |-
                  ClientReference is for a client resource. (DWS) Computes is the only client
                  resource type currently supported
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              desiredState:
                description: DesiredState is the desired state for the mounts on the
                  client
                enum:
                - mounted
                - unmounted
                type: string
              groupID:
                description: GroupID for the new mount. Currently only used for raw
                format: int32
                type: integer
              ignoreOfflineComputes:
                default: false
                type: boolean
              makeClientMounts:
                default: true
                description: |-
                  MakeClientMounts determines whether the ClientMount resources are made, or if only
                  the access list on the NnfNodeBlockStorage is updated
                type: boolean
              mountPath:
                description: MountPath for the storage target on the client
                type: string
              mountPathPrefix:
                type: string
              storageReference:
                description: StorageReference is the NnfStorage reference
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              target:
                description: |-
                  Target specifies which storage targets the client should mount
                  - single: Only one of the storage the client can access
                  - all: All of the storage the client can access
                  - shared: Multiple clients access the same storage
                enum:
                - single
                - all
                - shared
                type: string
              teardownState:
                allOf:
                - enum:
                  - Proposal
                  - Setup
                  - DataIn
                  - PreRun
                  - PostRun
                  - DataOut
                  - Teardown
                - enum:
                  - PreRun
                  - PostRun
                  - Teardown
                description: |-
                  TeardownState is the desired state of the workflow for this NNF Access resource to
                  be torn down and deleted.
                type: string
              userID:
                description: UserID for the new mount. Currently only used for raw
                format: int32
                type: integer
            required:
            - desiredState
            - groupID
            - ignoreOfflineComputes
            - makeClientMounts
            - storageReference
            - target
            - teardownState
            - userID
            type: object
          status:
            description: NnfAccessStatus defines the observed state of NnfAccess
            properties:
              error:
                description: Error information
                properties:
                  debugMessage:
                    description: Internal debug message for the error
                    type: string
                  severity:
                    description: |-
                      Indication of how severe the error is. Minor will likely succeed, Major may
                      succeed, and Fatal will never succeed.
                    enum:
                    - Minor
                    - Major
                    - Fatal
                    type: string
                  type:
                    description: Internal or user error
                    enum:
                    - Internal
                    - User
                    - WLM
                    type: string
                  userMessage:
                    description: Optional user facing message if the error is relevant
                      to an end user
                    type: string
                required:
                - debugMessage
                - severity
                - type
                type: object
              ready:
                description: Ready signifies whether status.state has been achieved
                type: boolean
              state:
                description: State is the current state
                enum:
                - mounted
                - unmounted
                type: string
            required:
            - ready
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
