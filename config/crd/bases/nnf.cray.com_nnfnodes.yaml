
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: nnfnodes.nnf.cray.com
spec:
  group: nnf.cray.com
  names:
    kind: NnfNode
    listKind: NnfNodeList
    plural: nnfnodes
    singular: nnfnode
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NnfNode is the Schema for the NnfNode API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NnfNodeSpec defines the desired state of NNF Node
            properties:
              name:
                description: The unique name for this NNF Node https://connect.us.cray.com/confluence/display/HSOS/Shasta+HSS+Component+Naming+Convention#ShastaHSSComponentNamingConvention-2.1.4.3MountainCabinetComponents
                type: string
              pod:
                description: 'The name of the pod managing this NNF node. The Pod
                  Name can be used to retrieve the system logs for a particular NNF
                  Node. TODO: Fill this in.'
                type: string
              state:
                description: State reflects the desired state of this NNF Node resource
                enum:
                - Enable
                - Disable
                type: string
              storage:
                description: Storage reflects the NNF Node Storage allocations for
                  this NNF Node
                items:
                  description: NnfNodeStorageSpec defines the desired storage on the
                    NNF Node. Storage spec are created on bequest of the user and
                    fullfilled by the NNF Node Controller.
                  properties:
                    capacity:
                      description: Capacity defines the capacity, in bytes, of this
                        storage specification. The NNF Node itself may split the storage
                        among the available drives operating in the NNF Node.
                      format: int64
                      type: integer
                    fileSystem:
                      description: FileSystem defines the desired file system that
                        is to be established for this Storage specification. An abscence
                        of a file system means raw block storage will be allocated
                        and made available to the desired servers.
                      type: string
                    servers:
                      description: Servers is a list of NNF connected Servers that
                        are to receive this NNF Storage resource. A valid server will
                        receive the physical storage that has been allocated via raw
                        block or the desired file system.
                      items:
                        description: NnfNodeStorageServerSpec defines the desired
                          server status for a given NNF Storage specification.
                        properties:
                          id:
                            description: Id defines the NNF Node unique identifier
                              for this NNF Server resource. A valid Id field will
                              receive the storage allocated by the parent NNF Storage
                              specification.
                            type: string
                          string:
                            description: Path defines an option path for which the
                              resource is made available on the NNF Server resource.
                              A valid path must adhear to the system's directory name
                              rules and conventions and cannot already exist on the
                              system. The path is analogous to the mountpoint of the
                              file system.
                            type: string
                        required:
                        - id
                        type: object
                      type: array
                    state:
                      description: State reflects the desired state of the storage
                        specification
                      enum:
                      - Create
                      - Destroy
                      type: string
                    uuid:
                      description: Uuid defines the unique identifer for this storage
                        request. The client is responsible for ensuing the Uuid is
                        unique for all storage specifications on this NNF Node.
                      type: string
                  required:
                  - capacity
                  - uuid
                  type: object
                type: array
            type: object
          status:
            description: NnfNodeStatus defines the observed status of NNF Node
            properties:
              capacity:
                format: int64
                type: integer
              capacityAllocated:
                format: int64
                type: integer
              health:
                description: NnfResourceHealthType defines the health of an NNF resource.
                type: string
              servers:
                items:
                  description: NnfServerStatus defines the observed state of servers
                    connected to this NNF Node
                  properties:
                    health:
                      description: NnfResourceHealthType defines the health of an
                        NNF resource.
                      type: string
                    id:
                      description: Id reflects the NNF Node unique identifier for
                        this NNF Server resource.
                      type: string
                    name:
                      description: Name reflects the common name of this NNF Server
                        resource.
                      type: string
                    status:
                      type: string
                  type: object
                type: array
              status:
                description: Status reflects the current status of the NNF Node
                type: string
              storage:
                items:
                  properties:
                    capacityAllocated:
                      description: Total capacity allocated for the storage. This
                        may differ than the requested storage capacity as the system
                        may round up to the requested capacity satisifiy underlying
                        storage requirements (i.e. block size / stripe size).
                      format: int64
                      type: integer
                    capacityUsed:
                      description: Represents the used capacity. This is an aggregation
                        of all the used capacities of the underlying storage objects.
                      format: int64
                      type: integer
                    conditions:
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    creationTime:
                      description: Represents the time when the storage was created
                        by the controller It is represented in RFC3339 form and is
                        in UTC.
                      format: date-time
                      type: string
                    deletionTime:
                      description: Represents the time when the storage was deleted
                        by the controller. This field is updated when the Storage
                        specification State transitions to 'Delete' by the client.
                        It is represented in RFC3339 form and is in UTC.
                      format: date-time
                      type: string
                    drives:
                      items:
                        properties:
                          health:
                            description: NnfResourceHealthType defines the health
                              of an NNF resource.
                            type: string
                          id:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                        type: object
                      type: array
                    health:
                      description: The current health of the storage
                      type: string
                    id:
                      description: Reflects the ID of the storage. Used internally
                        to the controller and can be safely ignored by the client.
                      type: string
                    servers:
                      items:
                        properties:
                          fileShare:
                            description: Represents the file share that is supporting
                              this server. A file share is the combination of a storage
                              group and the associated file system parameters (type,
                              mountpoint) that makes up the available storage.
                            properties:
                              health:
                                description: NnfResourceHealthType defines the health
                                  of an NNF resource.
                                type: string
                              id:
                                type: string
                              status:
                                type: string
                            type: object
                          health:
                            description: NnfResourceHealthType defines the health
                              of an NNF resource.
                            type: string
                          id:
                            description: Id defines the NNF Node unique identifier
                              for this NNF Server resource. A valid Id field will
                              receive the storage allocated by the parent NNF Storage
                              specification.
                            type: string
                          status:
                            type: string
                          storageGroup:
                            description: Represents the storage group that is supporting
                              this server. A storage group is the mapping from a group
                              of drive namespaces to an individual server. This value
                              can be safely ignored by the client.
                            properties:
                              health:
                                description: NnfResourceHealthType defines the health
                                  of an NNF resource.
                                type: string
                              id:
                                type: string
                              status:
                                type: string
                            type: object
                          string:
                            description: Path defines an option path for which the
                              resource is made available on the NNF Server resource.
                              A valid path must adhear to the system's directory name
                              rules and conventions and cannot already exist on the
                              system. The path is analogous to the mountpoint of the
                              file system.
                            type: string
                        required:
                        - id
                        type: object
                      type: array
                    status:
                      description: The current state of the storage
                      type: string
                    uuid:
                      description: Reflects the unique identifier for the storage.
                        When a storage spec is received the controller will create
                        a status object with the same UUID.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
