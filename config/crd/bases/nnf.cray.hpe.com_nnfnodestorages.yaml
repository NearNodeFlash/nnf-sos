---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: nnfnodestorages.nnf.cray.hpe.com
spec:
  group: nnf.cray.hpe.com
  names:
    kind: NnfNodeStorage
    listKind: NnfNodeStorageList
    plural: nnfnodestorages
    singular: nnfnodestorage
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NnfNodeStorage is the Schema for the NnfNodeStorage API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NnfNodeStorageSpec defines the desired storage attributes
              on a NNF Node. Storage spec are created on bequest of the user and fullfilled
              by the NNF Node Controller.
            properties:
              capacity:
                description: Capacity defines the capacity, in bytes, of this storage
                  specification. The NNF Node itself may split the storage among the
                  available drives operating in the NNF Node.
                format: int64
                type: integer
              clientEndpoints:
                description: ClientEndpoints sets which endpoints should have access
                  to an allocation.
                items:
                  description: ClientEndpointsSpec contains information about which
                    nodes a storage allocation should be visible to
                  properties:
                    allocationIndex:
                      description: Index of the allocation in the NnfNodeStorage
                      type: integer
                    nodeNames:
                      description: List of nodes that should see the allocation
                      items:
                        type: string
                      type: array
                  required:
                  - allocationIndex
                  - nodeNames
                  type: object
                type: array
              count:
                description: Count is the number of allocations to make on this node.
                  All of the allocations will be created with the same parameters
                minimum: 0
                type: integer
              fileSystemType:
                default: raw
                description: FileSystemType defines the type of the desired filesystem,
                  or raw block device.
                enum:
                - raw
                - lvm
                - zfs
                - xfs
                - gfs2
                - lustre
                type: string
              groupID:
                description: Group ID for file system
                format: int32
                type: integer
              lustreStorage:
                description: LustreStorageSpec describes the Lustre target created
                  here, if FileSystemType specifies a Lustre target.
                properties:
                  backFs:
                    description: BackFs is the type of backing filesystem to use.
                    enum:
                    - ldiskfs
                    - zfs
                    type: string
                  fileSystemName:
                    description: FileSystemName is the fsname parameter for the Lustre
                      filesystem.
                    maxLength: 8
                    type: string
                  mgsNode:
                    description: MgsNode is the NID of the MGS to use. This is used
                      only when creating MDT and OST targets.
                    type: string
                  startIndex:
                    description: StartIndex is used to order a series of MDTs or OSTs.  This
                      is used only when creating MDT and OST targets. If count in
                      the NnfNodeStorageSpec is more than 1, then StartIndex is the
                      index of the first allocation, and the indexes increment from
                      there.
                    minimum: 0
                    type: integer
                  targetType:
                    description: TargetType is the type of Lustre target to be created.
                    enum:
                    - MGT
                    - MDT
                    - MGTMDT
                    - OST
                    type: string
                type: object
              setOwnerGroup:
                default: false
                description: Set the owner and group permissions specified by UserID
                  and GroupID. This is for Lustre file systems only, and should be
                  set only after all Lustre targets are created.
                type: boolean
              userID:
                description: User ID for file system
                format: int32
                type: integer
            required:
            - clientEndpoints
            - count
            - fileSystemType
            - groupID
            - setOwnerGroup
            - userID
            type: object
          status:
            description: NnfNodeStorageStatus defines the status for NnfNodeStorage
            properties:
              allocations:
                description: Allocations is the list of storage allocations that were
                  made
                items:
                  description: NnfNodeStorageAllocationStatus defines the allocation
                    status for each allocation in the NnfNodeStorage
                  properties:
                    capacityAllocated:
                      description: Total capacity allocated for the storage. This
                        may differ from the requested storage capacity as the system
                        may round up to the requested capacity satisify underlying
                        storage requirements (i.e. block size / stripe size).
                      format: int64
                      type: integer
                    conditions:
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    creationTime:
                      description: Represents the time when the storage was created
                        by the controller It is represented in RFC3339 form and is
                        in UTC.
                      format: date-time
                      type: string
                    deletionTime:
                      description: Represents the time when the storage was deleted
                        by the controller. This field is updated when the Storage
                        specification State transitions to 'Delete' by the client.
                        It is represented in RFC3339 form and is in UTC.
                      format: date-time
                      type: string
                    fileShare:
                      description: Represents the file share that is supporting this
                        server. A file share is the combination of a storage group
                        and the associated file system parameters (type, mountpoint)
                        that makes up the available storage.
                      properties:
                        health:
                          description: NnfResourceHealthType defines the health of
                            an NNF resource.
                          type: string
                        id:
                          description: ID reflects the NNF Node unique identifier
                            for this NNF Server resource.
                          type: string
                        name:
                          description: Name reflects the common name of this NNF Server
                            resource.
                          type: string
                        status:
                          description: NnfResourceStatusType is the string that indicates
                            the resource's status
                          type: string
                      type: object
                    fileSystem:
                      description: NnfResourceStatus provides common fields that are
                        included in all NNF Resources
                      properties:
                        health:
                          description: NnfResourceHealthType defines the health of
                            an NNF resource.
                          type: string
                        id:
                          description: ID reflects the NNF Node unique identifier
                            for this NNF Server resource.
                          type: string
                        name:
                          description: Name reflects the common name of this NNF Server
                            resource.
                          type: string
                        status:
                          description: NnfResourceStatusType is the string that indicates
                            the resource's status
                          type: string
                      type: object
                    logicalVolume:
                      description: Name of the LVM LV
                      type: string
                    nvmeList:
                      description: List of NVMe namespaces used by this allocation
                      items:
                        description: NnfNodeStorageNVMeStatus provides a way to uniquely
                          identify an NVMe namespace in the system
                        properties:
                          deviceSerial:
                            description: Serial number of the base NVMe device
                            type: string
                          namespaceGUID:
                            description: Globally unique namespace ID
                            type: string
                          namespaceID:
                            description: Id of the Namespace on the NVMe device (e.g.,
                              "2")
                            type: string
                        required:
                        - deviceSerial
                        - namespaceGUID
                        - namespaceID
                        type: object
                      type: array
                    storageGroup:
                      description: Represents the storage group that is supporting
                        this server. A storage group is the mapping from a group of
                        drive namespaces to an individual server. This value can be
                        safely ignored by the client.
                      properties:
                        health:
                          description: NnfResourceHealthType defines the health of
                            an NNF resource.
                          type: string
                        id:
                          description: ID reflects the NNF Node unique identifier
                            for this NNF Server resource.
                          type: string
                        name:
                          description: Name reflects the common name of this NNF Server
                            resource.
                          type: string
                        status:
                          description: NnfResourceStatusType is the string that indicates
                            the resource's status
                          type: string
                      type: object
                    storagePool:
                      description: NnfResourceStatus provides common fields that are
                        included in all NNF Resources
                      properties:
                        health:
                          description: NnfResourceHealthType defines the health of
                            an NNF resource.
                          type: string
                        id:
                          description: ID reflects the NNF Node unique identifier
                            for this NNF Server resource.
                          type: string
                        name:
                          description: Name reflects the common name of this NNF Server
                            resource.
                          type: string
                        status:
                          description: NnfResourceStatusType is the string that indicates
                            the resource's status
                          type: string
                      type: object
                    volumeGroup:
                      description: Name of the LVM VG
                      type: string
                  type: object
                type: array
              error:
                description: Error information
                properties:
                  debugMessage:
                    description: Internal debug message for the error
                    type: string
                  recoverable:
                    description: Indication if the error is likely recoverable or
                      not
                    type: boolean
                  userMessage:
                    description: Optional user facing message if the error is relevant
                      to an end user
                    type: string
                required:
                - debugMessage
                - recoverable
                type: object
              lustreStorage:
                description: LustreStorageStatus describes the Lustre targets created
                  here.
                properties:
                  nid:
                    description: Nid (LNet Network Identifier) of this node. This
                      is populated on MGS nodes only.
                    type: string
                type: object
              ownerGroupStatus:
                description: OwnerGroupStatus is the status of the operation for setting
                  the owner and group of a file system
                type: string
            type: object
        type: object
    served: true
    storage: true
