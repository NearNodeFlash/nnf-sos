---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: nnfdatamovements.nnf.cray.hpe.com
spec:
  group: nnf.cray.hpe.com
  names:
    kind: NnfDataMovement
    listKind: NnfDataMovementList
    plural: nnfdatamovements
    singular: nnfdatamovement
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current state
      jsonPath: .status.state
      name: STATE
      type: string
    - description: Status of current state
      jsonPath: .status.status
      name: STATUS
      type: string
    - jsonPath: .status.error.severity
      name: ERROR
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NnfDataMovement is the Schema for the nnfdatamovements API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NnfDataMovementSpec defines the desired state of NnfDataMovement
            properties:
              cancel:
                default: false
                description: Set to true if the data movement operation should be
                  canceled.
                type: boolean
              destination:
                description: Destination describes the destination of the data movement
                  operation
                properties:
                  path:
                    description: Path describes the location of the user data relative
                      to the storage instance
                    type: string
                  storageReference:
                    description: Storage describes the storage backing this data movement
                      specification; Storage can reference either NNF storage or global
                      Lustre storage depending on the object references Kind field.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              groupId:
                description: Group Id specifies the group ID for the data movement
                  operation. This value is used in conjunction with the user ID to
                  ensure the user has valid permissions to perform the data movement
                  operation.
                format: int32
                type: integer
              profile:
                default: default
                description: Profile specifies the name of profile in the nnf-dm-config
                  ConfigMap to be used for configuring data movement. Defaults to
                  the default profile.
                type: string
              source:
                description: Source describes the source of the data movement operation
                properties:
                  path:
                    description: Path describes the location of the user data relative
                      to the storage instance
                    type: string
                  storageReference:
                    description: Storage describes the storage backing this data movement
                      specification; Storage can reference either NNF storage or global
                      Lustre storage depending on the object references Kind field.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              userConfig:
                description: User defined configuration on how data movement should
                  be performed. This overrides the configuration defined in the nnf-dm-config
                  ConfigMap. These values are typically set by the Copy Offload API.
                properties:
                  dcpOptions:
                    description: Extra options to pass to the dcp command (used to
                      perform data movement).
                    type: string
                  dryrun:
                    default: false
                    description: Fake the Data Movement operation. The system "performs"
                      Data Movement but the command to do so is trivial. This means
                      a Data Movement request is still submitted but the IO is skipped.
                    type: boolean
                  logStdout:
                    default: false
                    description: 'If true, enable the command''s stdout to be saved
                      in the log when the command completes successfully. On failure,
                      the output is always logged. Note: Enabling this option may
                      degrade performance.'
                    type: boolean
                  maxSlots:
                    description: The number of max_slots specified in the MPI hostfile.
                      A value of 0 disables the use of slots in the hostfile. Nil
                      will defer to the value specified in the nnf-dm-config ConfigMap.
                    type: integer
                  slots:
                    description: The number of slots specified in the MPI hostfile.
                      A value of 0 disables the use of slots in the hostfile. Nil
                      will defer to the value specified in the nnf-dm-config ConfigMap.
                    type: integer
                  storeStdout:
                    default: false
                    description: 'Similar to LogStdout, store the command''s stdout
                      in Status.Message when the command completes successfully. On
                      failure, the output is always stored. Note: Enabling this option
                      may degrade performance.'
                    type: boolean
                type: object
              userId:
                description: User Id specifies the user ID for the data movement operation.
                  This value is used in conjunction with the group ID to ensure the
                  user has valid permissions to perform the data movement operation.
                format: int32
                type: integer
            type: object
          status:
            description: NnfDataMovementStatus defines the observed state of NnfDataMovement
            properties:
              commandStatus:
                description: CommandStatus reflects the current status of the underlying
                  Data Movement command as it executes. The command status is polled
                  at a certain frequency to avoid excessive updates to the Data Movement
                  resource.
                properties:
                  command:
                    description: The command that was executed during data movement.
                    type: string
                  elapsedTime:
                    description: ElapsedTime reflects the elapsed time since the underlying
                      data movement command started.
                    type: string
                  lastMessage:
                    description: LastMessage reflects the last message received over
                      standard output or standard error as captured by the underlying
                      data movement command.
                    type: string
                  lastMessageTime:
                    description: LastMessageTime reflects the time at which the last
                      message was received over standard output or standard error
                      by the underlying data movement command.
                    format: date-time
                    type: string
                  progress:
                    description: Progress refects the progress of the underlying data
                      movement command as captured from standard output. A best effort
                      is made to parse the command output as a percentage. If no progress
                      has yet to be measured than this field is omitted. If the latest
                      command output does not contain a valid percentage, then the
                      value is unchanged from the previously parsed value.
                    format: int32
                    type: integer
                type: object
              endTime:
                description: EndTime reflects the time at which the Data Movement
                  operation ended.
                format: date-time
                type: string
              error:
                description: Error information
                properties:
                  debugMessage:
                    description: Internal debug message for the error
                    type: string
                  severity:
                    description: Indication of how severe the error is. Minor will
                      likely succeed, Major may succeed, and Fatal will never succeed.
                    enum:
                    - Minor
                    - Major
                    - Fatal
                    type: string
                  type:
                    description: Internal or user error
                    enum:
                    - Internal
                    - User
                    type: string
                  userMessage:
                    description: Optional user facing message if the error is relevant
                      to an end user
                    type: string
                required:
                - debugMessage
                - severity
                - type
                type: object
              message:
                description: Message contains any text that explains the Status. If
                  Data Movement failed or storeStdout is enabled, this will contain
                  the command's output.
                type: string
              restarts:
                description: Restarts contains the number of restarts of the Data
                  Movement operation.
                type: integer
              startTime:
                description: StartTime reflects the time at which the Data Movement
                  operation started.
                format: date-time
                type: string
              state:
                description: Current state of data movement.
                enum:
                - Starting
                - Running
                - Finished
                type: string
              status:
                description: Status of the current state.
                enum:
                - Success
                - Failed
                - Invalid
                - Cancelled
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
