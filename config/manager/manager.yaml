apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      cray.nnf.node: "true"
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "25%"
  template:
    metadata:
      labels:
        cray.nnf.node: "true"
    spec:
      # Use the hostâ€™s pid namespace. This provides access to lvmlockd that is running
      # as part of the rabbit cluster.
      hostPID: true
      nodeSelector:
        cray.nnf.node: "true"
      tolerations:
      - key: "cray.nnf.node"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      containers:
      - command:
        - /manager
        args:
        - --controller=node
        - --mock
        image: controller:latest
        name: manager
        env:
          # This is the SF resource ID for the Rabbit node endpoint. We'll
          # use this node to create storage during setup phase
          - name: RABBIT_NODE
            value: "0"
          - name: NNF_EC_COMMAND_TIMEOUT_SECONDS
            value: "90"
          - name: NNF_COMMAND_TIMEOUT_SECONDS
            value: "90"
          - name: NNF_LUSTRE_FSNAME_ERASE_COMMAND
            value: "lctl erase_lcfg"
          - name: NNF_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: NNF_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NNF_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: NNF_MAPPER_WAIT_TIMEOUT
            value: "5"
        ports:
          - containerPort: 50057
            name: nnf-ec
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 25
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 10
        securityContext:
          privileged: true
      serviceAccountName: node-controller
      terminationGracePeriodSeconds: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - command:
        - /manager
        args:
        - --controller=storage
        - --leader-elect
        image: controller:latest
        name: manager
        env:
          - name: SERVERS_BATCH_TIME_MSEC
            value: "2000"
          - name: NNF_STORAGE_PROFILE_NAMESPACE
            value: nnf-system
          - name: NNF_CONTAINER_PROFILE_NAMESPACE
            value: nnf-system
          - name: NNF_PORT_MANAGER_NAME
            value: nnf-port-manager
          - name: NNF_PORT_MANAGER_NAMESPACE
            value: nnf-system
        ports:
          - containerPort: 50057
            name: nnf-ec
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
